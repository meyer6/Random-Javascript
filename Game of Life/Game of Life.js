function Game_State_Display(){
    ctx.fillStyle="#000000";
    ctx.fillRect(0,0,551,551);  
    ctx.fillStyle="#FFFFFF"; 
    for(x=0;x<25;x++){
        for(y=0;y<25;y++){
            if(board[x+y*25]=="0"){
                ctx.fillRect(x*22+1,y*22+1,21,21);           
            }
        }       
    }
}
function Change(){
    var new_board
    for(x=0;x<25;x++){
        for(y=0;y<25;y++){
            var count=0
            for(x1=-1;x1<=1;x1++){
                for(y1=-1;y1<=1;y1++){
                    if(!(y1==0 && x1==0) && x+x1>=0 && x+x1<=24 && y+y1>=0 && y+y1<=24){
                        if(board[x+x1+(y+y1)*25]=="1"){
                            count++
                        }
                    }
                }                
            }
            if(count==3){
               new_board=Replace(new_board,x+y*25,"1") 
            }else if(count==2 && board[x+y*25]=="1"){
                new_board=Replace(new_board,x+y*25,"1") 
            }
        }
    }
    board=new_board   
}
function Replace(string,index,replace){
    return string.slice(0,index)+replace+string.slice(index+1,string.length)
}
function sleep(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
}
function getXY(canvas, event){
  const rect = canvas.getBoundingClientRect();
  const y = event.clientY - rect.top;
  const x = event.clientX - rect.left;
  return [x,y];
}
document.addEventListener("click",  function (e) {
    const XY = getXY(canvas, e);
    if(XY[0]>=0 && XY[0]<=550 && XY[1]>=0 && XY[1]<=550 && drawn==false){
        var x=Math.floor(XY[0]/22)
        var y=Math.floor(XY[1]/22)
        board=Replace(board,x+y*25,((parseInt(board[x+y*25])+1)%2).toString())
        Game_State_Display();
    }
});
document.body.addEventListener("keydown", function (e) {
    if(e.keyCode==32 && drawn==false){
        drawn=true;
    }else if(e.keyCode==32 && drawn==true){
        board
        drawn=false
    }
});
var canvas = document.getElementById("Screen");
var ctx = canvas.getContext('2d');
var start=Date.now();
var drawn=false
var board
async function gameLoop(){
    if(Date.now()-start>200){
        if(drawn==true){
            Change();
        }
        Game_State_Display();
        start=Date.now();
    }else{
        await sleep(Math.max(200-(Date.now()-start),0));
    }
    window.requestAnimationFrame(gameLoop);
}
window.requestAnimationFrame(gameLoop);